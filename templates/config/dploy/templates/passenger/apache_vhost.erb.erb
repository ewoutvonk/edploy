<IfModule passenger_module>
  <VirtualHost *:80>
    ServerName <%%= domain.to_s %>
    <%% if stage == :production %>
    ServerAlias <%= application %>.*
    ServerAlias *.<%= application %>.*
    <%% else %>
    ServerAlias <%%= passenger_log_name.to_s %>.<%= application %>.*
    ServerAlias *.<%%= passenger_log_name.to_s %>.<%= application %>.*
    <%% end %>

    DocumentRoot "<%%= passenger_document_root.to_s %>"
    PassengerAppRoot "<%%= passenger_app_root.to_s %>"

    LogLevel warn
    LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" (%D)" combined_with_processing_time
    LogFormat "%h %l %u %t \"%r\" %>s %b (%D)" common_with_processing_time
    SetEnvIf Request_URI "^/haproxy\.txt$" dontlog
    CustomLog "/var/log/apache2/<%= application %>-access.log" <%%= stage == :production ? "combined_with_processing_time" : "common_with_processing_time" %> env=!dontlog
    ErrorLog "/var/log/apache2/<%= application %>-error.log warning"

    RackEnv <%%= rails_env.to_s %>

    RewriteEngine On

    # if using a textfile for haproxy to check, we need this ruleset, in order to
    # prevent the request for the checkfile to enter rails.
    RewriteCond %{REQUEST_URI} haproxy.txt
    RewriteCond %{DOCUMENT_ROOT}/haproxy.txt !-f
    RewriteRule ^(.*)$ $1 [L,R=404]

    # Ruleset for returning 503 to API calls when in maintenance mode
    RewriteCond %{REQUEST_URI} !\.(css|jpg|png)$
    RewriteCond %{REQUEST_URI} !server-status/?$
    RewriteCond %{HTTP_HOST} ^api\. [NC]
    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^/.*$ /system/maintenance.html [L,R=503]

    # Ruleset for returning 503 to requests from search bots when in maintenance mode
    RewriteCond %{REQUEST_URI} !\.(css|jpg|png)$
    RewriteCond %{REQUEST_URI} !server-status/?$
    RewriteCond %{HTTP_USER_AGENT} Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Msnbot|Slurp|Teoma|^$ [NC]
    RewriteCond %{HTTP_HOST} !^(app) [NC]
    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^/.*$ /system/maintenance.html [L,R=503]

    # Ruleset for redirect to maintenance page when in maintenance mode, in the case of
    # AJAX requests. These requests might update only a DIV, leading to incorrect website views
    # when not redirecting externally
    RewriteCond %{HTTP:X-Requested-With} ^XMLHttpRequest$
    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^/.*$ /system/maintenance.html [L,R]

    # Ruleset for returning a normal maintenance page when in maintenance mode, to the normal
    # user. We can't add 503 as the status (needs to be 200 OK), as otherwise haproxy will
    # override the html page returned.
    # If you add '<%= application %>' to your User Agent string, you can visit the site
    # while it is in maintenance mode.
    RewriteCond %{REQUEST_URI} !\.(css|jpg|png)$
    RewriteCond %{REQUEST_URI} !server-status/?$
    RewriteCond %{HTTP_USER_AGENT} !(<%= application %>) [NC]
    RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^/.*$ /system/maintenance.html [L]

    <Proxy *>
      AddDefaultCharset off
      Order deny,allow
      Allow from localhost
    </Proxy>

    <FilesMatch "\.(js|css)$">
      ExpiresActive On
      ExpiresDefault "access plus 1 year"
    </FilesMatch>

    <FilesMatch "\.(ico|gif|jpe?g|png)$">
      ExpiresActive On
      ExpiresDefault "access plus 1 year"
      FileETag INode MTime
    </FilesMatch>

    <%% if [ :staging, :tryout ].include?(stage.to_sym) %>
    UserDir disabled
    UserDir enabled tl
    UserDir public_html

    <Location "/~tl">
      PassengerEnabled off
    </Location>

    <directory "public_html">
      Options +Indexes
    </directory>
    <%% end %>

    <Directory "<%%= passenger_document_root.to_s %>">
      Order allow,deny
      Allow from all
      AddOutputFilterByType DEFLATE text/html
    </Directory>
  </VirtualHost>
</IfModule>

